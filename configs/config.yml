## THIS FILE CONTAINS ALL THE TRAINING/INFERENCE PARAMETERS AND GYM ENVIRONMENT PARAMETERS  ###
## THE FOLLOWING ARE GLOBAL PARAMETERS  ###
# Observation type. CHOICES: 'image', 'vector', 'cmvae'
obs: 'cmvae'

# If you want to pass image observation through pretrained encoder, provide filepath, else pass empty string
cmvae_path: 'C:\Users\sambu\Documents\Repositories\CodeBases\SWiMM_DEEPeR\data\cmvae_training_seed_2\results_seed_2_device_gpu\best_model.ckpt'

# If using image obs, declare desired output size of scaling function. NOTE this is DIFFERENT from cmvae img_res, which uses img_res contained in cmvae_config.
img_res: !!python/tuple [64,64,3]

# Do we want to output the packet information and save images
debug_logs: True

# Set seed with arbitrary int so that can report with results
seed: 3

### THE FOLLOWING ARE TRAINING PARAMETERS  ###
# Algorithm to import from Stable Baselines. CHOICES: 'sac', 'ppo', 'ddpg'
algo: 'sac'

# If you want to train on top of an existing model, provide filepath, else pass empty string
model_path: ''

# Whether to save the Monitor logs generate by the Stable Baselines Monitor wrapper NOTE: False still writes but to tmp
monitor: True

# Used to express the optimal tracking position. This value is subtracted from the z-coordinate of the target's position
# i.e. how far set back from the target do you want the AUV to position itself
opt_d: 6

# At what radial distance should the episode terminate (FROM THE OPTIMAL TRACKING POSITION, NOT THE TARGET POSITION)
max_d: 4

# Override log interval
log_interval: 1

### THE FOLLOWING ARE INFERENCE PARAMETERS  ###
# Path to where to create reward log csv as an output of inference run
reward_log_path: 'C:\Users\sambu\Documents\Repositories\CodeBases\SWiMM_DEEPeR\Logs\sac\1\inference.csv'

# Episode length threshold. 0 for unlimited length.
ep_length_threshold: 3000